@model IamPropertyTask.ViewModels.Task.SubmitData
@{
    ViewBag.Title = "Home";
    Layout = null;
}
<html>
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Palindrome Test</title>
    <style>
        body {
            padding: 0;
            margin: 0;
            min-height: 100%;
            height: 100vh
        }

        .greenBackGround {
            background-color: lawngreen;
        }

        .redBackGround {
            background-color: red;
        }

        .container {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-49%, -49%);
            box-shadow: 10px 13px 10px #000000;
            background: #f5f5f5;
        }


        input {
            border-radius: 15px;
            border: 1px solid black;
            padding: 5px 15px;
            text-align: center;
        }

        button {
            border: 1px solid black;
            border-radius: 8px;
            color: limegreen;
            padding: 5px 5px;
            font-weight: bold;
            margin: 0 10px;
        }

        .subContainer {
            margin: 30px 80px 63px 80px;
        }

            .subContainer img {
                width: 39PX;
                height: 30px;
                background-size: contain;
                margin: 0 10px;
            }

        .firstInput {
            margin-bottom: 16px;
        }

        form {
            justify-content: space-between;
        }

        form, .firstInput {
            position: relative;
            display: flex;
            align-items: center;
        }

        span {
            position: absolute;
            z-index: 2;
            color: black;
            left: 70px;
        }

        .footer {
            position: absolute;
            top: 79%;
            left: 46%;
        }

            .footer img {
                background-size: contain;
            }
    </style>
</head>
<body>
    <img src="~/Content/Images/background.png"
         onload="this.style.opacity='1'" width="100%" height="100%" alt="background">

    <div class="container">
        <div class="subContainer">
            <div class="firstInput">
                <img src="~/Content/Images/javascript-vector-logo-yellow.png" />
                @Html.TextBoxFor(m => Model.JavaScriptInput, new { name = "jsTextInput", id = "jsTextInput", Value = Model.JavaScriptInput, @class = "redBackGround" })
                <span>A</span>
            </div>

            <form action="/Task/ValidatePalindromSQL" method="post" class="sqlForm">
                <img src="~/Content/Images/sqlicon.png" />
                @if (!Model.IsPalindromSQL)
                {
                    @Html.TextBoxFor(m => Model.SqlInput, new { name = "SqlInput", id = "SqlInput", Value = Model.SqlInput, @class = "redBackGround" })
                }
                else
                {
                    @Html.TextBoxFor(m => Model.SqlInput, new { name = "SqlInput", id = "SqlInput", Value = Model.SqlInput, @class = "greenBackGround" })
                }
                <input type="hidden" name="CSharpInput" value=@Model.CSharpInput>
                <input type="hidden" id="javaScriptInputSqlFrom" name="JavaScriptInput" value=@Model.JavaScriptInput>

                @Html.HiddenFor(m => m.IsPalindromCSharp, new { Value = Model.IsPalindromCSharp })
                <span>B</span>
                <button type="submit" value="Submit"> GO </button>
            </form>

            <form action="/Task/ValidatePalindromCSharp" method="post" class="jsForm">
                <img src="~/Content/Images/csharpicon.png" />

                @if (!Model.IsPalindromCSharp)
                {
                    @Html.TextBoxFor(m => Model.CSharpInput, new { name = "CSharpInput", id = "CSharpInput", Value = Model.CSharpInput, @class = "redBackGround" })
                }
                else
                {
                    @Html.TextBoxFor(m => Model.CSharpInput, new { name = "CSharpInput", id = "CSharpInput", Value = Model.CSharpInput, @class = "greenBackGround" })
                }

                <input type="hidden" name="SqlInput" value=@Model.SqlInput>
                <input type="hidden" id="javaScriptInputCSharpFrom" name="JavaScriptInput" value=@Model.JavaScriptInput>
                @Html.HiddenFor(m => m.IsPalindromSQL, new { Value = Model.IsPalindromSQL })
                <span>C</span>
                <button type="submit" value="Submit"> GO </button>
            </form>
        </div>

    </div>
    <div class="footer">
        <img src="~/Content/Images/companyLogo.png" width="40%" height="20%" alt="sub-background" />
    </div>


</body>

</html>



@Scripts.Render("~/bundles/jquery")
<script>
    $('#jsTextInput').on('input', modifyInputClass);
    jQuery(document).ready(modifyInputClass)


    function palindrome(str) {
        if (str == null || str == "")
            return false

        var lowRegStr = str.toLowerCase().replaceAll(' ', '');

        var reverseStr = lowRegStr.split('').reverse().join('');
  
        return reverseStr === lowRegStr;
    }

    function modifyInputClass() {
        if (palindrome($("#jsTextInput").val()) == true) {
            $("#jsTextInput").removeClass("redBackGround")
            $("#jsTextInput").addClass("greenBackGround")
        }
        else {
            $("#jsTextInput").removeClass("greenBackGround")
            $("#jsTextInput").addClass("redBackGround")
        }
        $("#javaScriptInputSqlFrom").val($("#jsTextInput").val())
        $("#javaScriptInputCSharpFrom").val($("#jsTextInput").val())
    }
</script>